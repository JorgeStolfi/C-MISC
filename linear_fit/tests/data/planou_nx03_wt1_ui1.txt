# Last edited on 2023-02-02 11:42:32 by stolfi
# Z = plane with 4 outliers
# X[1..2] = grid point coordinates.
# HAS weights (random 0 or 1)
# HAS unit term (X[0])

   0 -0.4000000   1.0000000   1.0  0.1000000  0.1000000
   1 -0.2500000   1.0000000   1.0  0.1000000  0.3000000
   2 -0.1000000   1.0000000   1.0  0.1000000  0.5000000
   3 +0.0500000   1.0000000   1.0  0.1000000  0.7000000
   4 +0.2000000   1.0000000   1.0  0.1000000  0.9000000
   5 -0.3500000   1.0000000   1.0  0.3000000  0.1000000
   6 +0.8000000   0.0010000   1.0  0.3000000  0.3000000
   7 -0.0500000   1.0000000   1.0  0.3000000  0.5000000
   8 +1.1000000   0.0010000   1.0  0.3000000  0.7000000
   9 +0.2500000   1.0000000   1.0  0.3000000  0.9000000
  10 -0.3000000   1.0000000   1.0  0.5000000  0.1000000
  11 -0.1500000   1.0000000   1.0  0.5000000  0.3000000
  12 +0.0000000   1.0000000   1.0  0.5000000  0.5000000
  13 +0.1500000   1.0000000   1.0  0.5000000  0.7000000
  14 +0.3000000   1.0000000   1.0  0.5000000  0.9000000
  15 -0.2500000   1.0000000   1.0  0.7000000  0.1000000
  16 +0.9000000   0.0010000   1.0  0.7000000  0.3000000
  17 +0.0500000   1.0000000   1.0  0.7000000  0.5000000
  18 +1.2000000   0.0010000   1.0  0.7000000  0.7000000
  19 +0.3500000   1.0000000   1.0  0.7000000  0.9000000
  20 -0.2000000   1.0000000   1.0  0.9000000  0.1000000
  21 -0.0500000   1.0000000   1.0  0.9000000  0.3000000
  22 +0.1000000   1.0000000   1.0  0.9000000  0.5000000
  23 +0.2500000   1.0000000   1.0  0.9000000  0.7000000
  24 +0.4000000   1.0000000   1.0  0.9000000  0.9000000

# gawk 'BEGIN{ N = 5; for (i = 0; i < N; i++) { for (j = 0; j < N; j++) { ID = i*N + j; X0 = 1.0; X1 = (i+0.5)/N; X2 = (j+0.5)/N; Z = 0.25*X1 + 0.75*X2 - 0.5; W = 1.0; K1 = ((i == 1) || (i == N-2)); K2 = ((j == 1) || (j == N-2)); if (K1 && K2) { Z = Z + 1.0; W = 0.001; } printf "%4d %+10.7f  %10.7f   %3.1f %10.7f %10.7f\n", ID, Z, W, X0, X1, X2; }}}'
