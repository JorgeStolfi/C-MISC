.\" Last edited on 2003-09-25 15:50:49 by stolfi
.\" See the authorship and copyrigh notice at the end of this file.
.\"
.nh
.TH sort-distr 1
.SH Name
sort-distr \- sort objects by similarity of distributions

.SH Syntax
.B sort\-distr \-\-numValues 
.I N 
.B [ \-\-width 
.I W 
.B ] [ \-\-skip 
.I S
.B ] [ \-\-discrete ] [ \-\-geometric ] [ \-\-farSort | \-\-cluSort ] [ \-\-delReSort ] [ \-\-repeat 
.I COUNT 
.B ] [ \-\-showMatrix 
.I FILE 
.B ] [ \-\-showPicture 
.I FILE 
.B ] [ \-\-verbose ]

.SH Description
.B sort\-distr
sorts a set of probability distributions by similarity.
Each line of stdin should contain a list of 
.I N
numbers, which are interpreted as a probability distribution on
.I N
alternatives or events.  The program tries to reorder
those lines so that lines with similar distributions
are close together.
.PP
This goal is equivalent to the Traveling Salesman problem, so don't 
expect the output to be the best possible solution.
.SH Options
.TP 6
.BI \-n\  NUM
.TP 0
.BI \-\-numValues\  NUM
The number of probability values in each distribution.
This parameter is required. 

.TP 6
.BI \-s\  NUM
.TP 0
.BI \-\-skip\  NUM
Skip the first 
.I NUM 
bytes of every line, before parsing the first probability value.
The default is zero. 

.TP 6
.BI \-w\  NUM
.TP 6
.BI \-\-width\  NUM
Specifies that the probabilities are given in fixed format,
as
.I N 
adjacent fields, each  
.I NUM 
bytes wide.
If this parameter is not specified,
.B sort\-distr
assumes that the probabilities are given in free format.
In that case each field must be terminated by 
a space, comma, or newline, and may be surrounded 
by extra spaces.  In either case, fields consisting entirely
of periods or dashes are taken to be zero.

.TP 6
.B \-d
.TP 6
.B \-\-discrete
If this option is given,
.B sort\-distr
assumes that the numbers in each line are observed counts
in some sampling experiment, and converts them to probabilities
taking into account sampling error.

.TP 6
.B \-g
.TP 6
.B \-\-geometric
By default,
.B sort\-distr
assumes the events are isolated, and
compares distributions as vectors with the Euclidean metric.
If this option is given, however,
.B sort\-distr
assumes that the events correspond to equally spaced positions
along a unidimensional path, and uses the "earth-movers"
distance to compare them. 

.TP 6
.B \-fs
.TP 6
.B \-\-farSort
Specifies that the first sorting pass should be done with 
the
.I Farthest-Point 
alternate sorting heuristic. 

.TP 6
.B \-cs
.TP 6
.B \-\-cluSort
Specifies that the first sorting pass should be done with 
the
.I Cluster-Tree
alternate sorting heuristic. 

.TP 6
.B \-ds
.TP 6
.B \-\-delReSort
Specifies that the second and additional sorting passes should be done with 
the
.I Delete-And-Insert 
alternate re-sorting heuristic. 

.TP 6
.BI \-m\  FILE
.TP 6
.BI \-\-showMatrix\  FILE
Print the distance matrix to the named file 
(or standard output if 
.I FILE 
is "-").
The distances are scaled to the range [0..99.5] and then
rounded to the nearest integer. 

.TP 6
.BI \-p\  FILE
.TP 6
.BI \-\-showPicture\  FILE
Writes the distance matrix to the named file 
(or standard output if 
.I FILE 
is "-"), as a color PPM 
image.  Each element becomes a colorful pixel, whose
brightness decreases with increasing distance (white for distance 0,
black for distance 1).

.TP 6
.BI \-r\  COUNT
.TP 6
.B \-\-repeat\  COUNT
Number of sorting passes (default 2). The first pass finds the 
two items with largest distance, places them at opposite ends of the 
list, and sorts all other items based on the ratio of their distances to those
two. The second pass looks at each item in turn, and tries to move it
along the list so as to decrease the path length.  If 
.I COUNT
is greater than 2, the 
second pass is performed
.I COUNT \- 1
times. If 
.I COUNT
is 1, performs only the first pass.
If 
.I COUNT 
is zero, the items are not sorted and output is supressed.
(This choice is useful for generating a distance matrix 
or picture of already sorted items.)

.TP 6
.B \-v
.TP 6
.B \-\-verbose
Print various progress messages to standard error.

.SH Bugs
Likely.

.SH Challenges for the bored
Add other distribution metrics.
.PP
Improve the sorting algorithm.
.PP
Ad dendrogram output option.

.SH Author
Jorge Stolfi

.\" (****************************************************************************)
.\" (* (C) Copyright 1992 Universidade Estadual de Campinas (UNICAMP)           *)
.\" (*                    Campinas, SP, Brazil                                  *)
.\" (*                                                                          *)
.\" (* Authors:                                                                 *)
.\" (*                                                                          *)
.\" (*   Jorge Stolfi        - CS Dept, UNICAMP <stolfi@dcc.unicamp.br>         *)
.\" (*                                                                          *)
.\" (* This file can be freely distributed, modified, and used for any          *)
.\" (*   non-commercial purpose, provided that this copyright and authorship    *)
.\" (*   notice be included in any copy or derived version of this file.        *)
.\" (*                                                                          *)
.\" (* DISCLAIMER: This software is offered ``as is'', without any guarantee    *)
.\" (*   as to fitness for any particular purpose.  Neither the copyright       *)
.\" (*   holder nor the authors or their employers can be held responsible for  *)
.\" (*   any damages that may result from its use.                              *)
.\" (****************************************************************************)
